三种数据存储方案：
1、在文件系统直接存储
2、关系数据库
3、nosql数据库

nosql(not only sql)
HBase 列结构
Redis  键/值结构
Virtuoso  图状结构

mongodb
集合，类似传统sql数据库中表，由一组具有相同或类似用途的文档组成。
文档，mongodb数据库中单个数据实体的表示
在mongodb数据库中，代表文档的记录被存储为BSON，这是json的一个轻量级的二进制形式。
字段名，不能包含空字符、句点(.)，或美元符号($)。
_id字段名为数据库保留字段名，由以下几部分组成：
1、一个4字节的值，代表从纪元以来过去的秒数
2、一个3字节的机器标识符
3、一个2字节的进程id
4、一个3字节的计数器，从一个随机数开始
在mongodb中，文档的最大大小为16MB

mongodb的数据类型
mongodb为每一种数据类型分配了从1到255的整数id号。
1 double
2 string
3 object
4 array
5 binary data  二进制数据
7 object id  对象id 
8 boolean
9 date
10 null
11 regular expression
13 javascript
14 symbol
15 javascript (with scope)  javascript(带作用域)
16 32-bit integer  
17 timestamp  
18 64-bit integer
255 min key 最小键
127 max key 最大键

mongodb中不同数据类型值的比较顺序，从低到高排列如下：
最小键(内部类型)
空值
数值(32位整数，64位整数，双精度浮点数)
符号,字符串
对象
数组
二进制数据
对象id
布尔值
日期，时间戳
正则表达式
最大键(内部类型)

规划数据模型
使用文档引用来规范化数据
将子对象分离成一个单独的集合
优点：节省空间，缺点：增加多余的查询
一般使用场景：一对多，多对多，频繁更新

使用嵌入式文档反规范化数据
将子对象嵌入在主对象中
优点：减少多余的查询，缺点：占用空间
一般使用场景：一对一，不频繁更新

使用封顶集合
封顶集合是具有固定大小的集合。当超过该集合的大小时，最旧的文档会被自动删除，并插入新的文档
限制：
一旦文档被插入到封顶集合，文档就无法更新到更大的尺寸
不能从封顶集合中删除文档

原子写操作
在mongodb的文档级别，同一时间只有一个写操作。即同时只有一个进程可以更新单个文档或单个集合。
要实现原子写操作，需将数据模型设计为反规范化文档

大量集合没有重大性能问题，但有大量条目的同一集合，会有性能问题。