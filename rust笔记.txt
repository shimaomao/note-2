变量绑定
模式（patterns）
类型注解（type annotations）
可变性（mutability）
初始化绑定（initializing bindings） //使用之前必须初始化
作用域（scope）
隐藏（shadowing） //重新声明并初始化变量，来覆盖前一个变量绑定

函数
定义函数时，必须为函数参数声明类型，这是一个全推断与无推断的最佳平衡
rust函数只能返回一个值 //->
rust是一个基于表达式的语言，分号与其它基于“大括号和分号”的语言不同，在rust中分号来分隔各个表达式
表达式与语句
表达式返回一个值，而语句不是
rust中语句有两种类型：声明语句和表达式语句（目的是把任何表达式变为语句），其余都是表达式
提早返回（early returns）
发散函数（diverging function）
发散函数并不返回，它拥有一个类型!，代表“发散”
控制台想获取更多的信息，配置rust环境RUST_BACKTRACE=1
函数指针
let f:fn(i32) -> i32 = someFunc; //此时不需要类型推断
let f = someFunc; //此时需要类型推断
