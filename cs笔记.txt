冯.诺依曼体系结构
控制器  // CC(central control)
运算器  // CA(central arithmetical)，包含通用寄存器
存储器  // M(memory)
输入  // I(input)
输出  // O(output)
外部记录介质  // R(outside recording mediumn)

x86处理器
x86-16 / IA-16
IA-32
x86-64

标量流水线处理器
超标量流水线处理器

指令体系结构
x86
mips

寄存器  // 每个bit位内部为一个触发器，触发器用于存储数据，如：D触发器
IR  // 指令寄存器，存放当前的指令
PC  // 程序计数器，存放下一条指令的地址
MAR  // 地址寄存器
MDR  // 数据寄存器
F  // 状态标志寄存器
R*  // 通用寄存器（包含段寄存器等）
CS  // 段寄存器，用于中断，CS:IP
IP  // 指令指针寄存器，用于中断
...

总线
控制总线  // 向主存等，发出控制信号
地址总线  // 宽度决定寻址范围，从而决定主存的使用率，如宽度为32的地址，其寻址范围可达2的32次方
数据总线  // 宽度为主存位宽的整数倍，决定数据数据传输能力
系统总线
...

cpu
sram  // 不是通过行地址列地址访问，高速缓存，一级cache，分为指令数据高速缓存和数据高速缓存，目前一般各为32KB，二级cache，一般256KB，三级cache，多核共享，一般8MB，可读写，断电丢失数据，通过6个晶体管组成的电路保存一个bit位信息

主存
内部包含一个核心的存储阵列，有若干行若干列，通过行号+列号即为地址，由此可选中一个存储单元，存储单元的每个bit通过电容保存bit位信息
字存储单元  // (8 * n)bit，存放一个机器字的存储单元，字地址，如果计算机中可编址的最小单位是字存储单元，则该计算机称为按字编址的计算机
字节存储单元  // 8bit，存放一个字节的单元，字节地址，如果计算机中可编址的最小单位是字节，则该计算机称为按字节编址的计算机
dram  // 可读写，断电丢失数据，sdr sdram(single data rate)，ddr sdram(double data rate)

BIOS(baisc input output system)
rom  // 只读，断电不丢失数据

时序
时钟周期  // 主频决定
机器周期（cpu周期）  // 完成指令的某一个阶段所需要的时间。一个时钟周期为一个节拍（P），两个节拍为一个状态周期（S），8051中6个状态周期为一个机器周期，即8051中一个机器周期为十二个时钟周期
指令周期  // 完成执行一条指令所需要的时间。指令周期，由若干个机器周期组成，指令的复杂度越高，需要的机器周期数越高。需要一个机器周期的指令称为单周期指令，需要两个机器周期的指令成为双周期指令

晶体管
NMOS  // get端为1则连通
PMOS  // get端为1则关闭

ALU  // 算术逻辑单元
与门，或门，非门, 异或门，拼装成各种加法器，乘法器等
半加器  // 不处理进位
加法器  // 行波进位加法器，超前进位加法器

在计算机中，有符号数和无符号数都是以补码形式进行运算，无符号数永远是正数，补码即其本身，补码没有+0和-0之分，有符号和无符号只是程序定义的，计算机没有这个概念
对于4bit位，有符号数取值范围，-8 -> -1 -> 0 -> 7，用补码表示1000 -> 1111 -> 0000 -> 0111
溢出  // 有符号数加减，最高位进位与溢出无关，进位自动丢弃，两个正数相加为负数为溢出，两个负数相加为正数为溢出，其他情况都不是溢出，无符号数相加，最高位进位为溢出

中断  // 并不特指错误异常，类似事件
实模式
保护模式

I/O接口  // 内部包含寄存器，中断控制逻辑等
显卡

处理I/O
程序控制  // cpu不停的询问，cpu处理I/O
中断控制  // 中断请求，cpu处理I/O
直接存储器访问(DMA, direct memory access)  // DMAC处理I/O，完成后向cpu发送中断请求

DOS  // 早期的操作系统
